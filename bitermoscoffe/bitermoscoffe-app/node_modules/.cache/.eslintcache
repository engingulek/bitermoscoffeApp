[{"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/index.js":"1","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reportWebVitals.js":"2","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/App.js":"3","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Card.js":"4","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Header.js":"5","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Menu.js":"6","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/SingUp.js":"7","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/SingIn.js":"8","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Cart.js":"9","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/CartConfirm.js":"10","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/firebase.js":"11","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/app/store.js":"12","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/features/login/loginSlice.js":"13","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/features/menu/menuSlice.js":"14","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/StepContainer.js":"15","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/features/product/productSlice.js":"16","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/FavoriList.js":"17","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/MyAcount.js":"18","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/PastOrder.js":"19","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Message.js":"20"},{"size":776,"mtime":1619343915038,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1619343915038,"results":"23","hashOfConfig":"22"},{"size":1868,"mtime":1622802102105,"results":"24","hashOfConfig":"22"},{"size":8253,"mtime":1622463555523,"results":"25","hashOfConfig":"22"},{"size":7380,"mtime":1622802602604,"results":"26","hashOfConfig":"22"},{"size":1846,"mtime":1621108941720,"results":"27","hashOfConfig":"22"},{"size":5586,"mtime":1622463555527,"results":"28","hashOfConfig":"22"},{"size":5172,"mtime":1622463555526,"results":"29","hashOfConfig":"22"},{"size":11492,"mtime":1622463555524,"results":"30","hashOfConfig":"22"},{"size":16682,"mtime":1622463555524,"results":"31","hashOfConfig":"22"},{"size":793,"mtime":1619343915038,"results":"32","hashOfConfig":"22"},{"size":375,"mtime":1619343915038,"results":"33","hashOfConfig":"22"},{"size":596,"mtime":1622463555528,"results":"34","hashOfConfig":"22"},{"size":591,"mtime":1622463555529,"results":"35","hashOfConfig":"22"},{"size":1892,"mtime":1622463555527,"results":"36","hashOfConfig":"22"},{"size":787,"mtime":1622463555529,"results":"37","hashOfConfig":"22"},{"size":8019,"mtime":1621167595328,"results":"38","hashOfConfig":"22"},{"size":15628,"mtime":1622463555526,"results":"39","hashOfConfig":"22"},{"size":6147,"mtime":1621804180811,"results":"40","hashOfConfig":"22"},{"size":2636,"mtime":1622805843410,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1b3frtp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/index.js",[],["93","94"],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reportWebVitals.js",[],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/App.js",["95","96"],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Card.js",["97","98","99","100"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport db from \"../firebase\";\nimport alert from \"alertifyjs\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\n\nfunction Card() {\n  const [products, setProduct] = useState([]);\n  const [cartConfrim, setCartConfirm] = useState([]);\n  const [cartConfirmListStatu, setCartConfirmListStatu] = useState(false);\n  const menuSelector = useSelector((state) => state.menuRed);\n\n  useEffect(() => {\n    if (menuSelector.menuInfo !== \"\") {\n      db.collection(\"products\")\n        .where(\"bransName\", \"==\", menuSelector.menuInfo.menuTitleId)\n        .onSnapshot((onSnapshot) => {\n          const productItems = [];\n          onSnapshot.forEach((doc) => {\n            productItems.push(doc);\n          });\n          setProduct(productItems);\n        });\n    } \n\n \n    \n    else {\n      db.collection(\"products\").onSnapshot((onSnapshot) => {\n        const productItems = [];\n        onSnapshot.forEach((doc) => {\n          productItems.push(doc);\n        });\n        setProduct(productItems);\n      });\n    }\n  }, [menuSelector.menuInfo.menuTitleId,menuSelector.searchInfo]);\n\n\n  useEffect(() => {\n    db.collection(\"products\").onSnapshot((onSnapshot)=>{\n      const productItems = [];\n      onSnapshot.forEach((doc) => {\n        productItems.push(doc);\n        const filterProducutName = productItems.filter((product=>{\n          return product.data().productName.toLowerCase().includes(menuSelector.searchInfo.toLowerCase())\n        }))\n        setProduct(filterProducutName);\n      });\n\n    })\n  }, [menuSelector.searchInfo])\n\n\n\n  useEffect(() => {\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n\n    if (uidLoc !== null) {\n      db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartConfirmList\")\n        .onSnapshot((onSnapshot) => {\n          const cartConfrimListItems = [];\n          onSnapshot.forEach((doc) => {\n            cartConfrimListItems.push(doc);\n          });\n          setCartConfirm(cartConfrimListItems);\n        });\n    }\n  }, []);\n\n  const addProducttoCart = (addItem) => {\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n\n    if (uidLoc === null) {\n      alert.error(\"Giriş Yapmadan Sipariş Veremezsiziniz\");\n    } else if (cartConfrim.length !== 0) {\n      alert.error(\"Başka Bir Siparişiniz Bulunmaktadır\");\n    } else {\n      const addCartItems = db\n        .collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartList\")\n        .doc(addItem.id);\n      addCartItems.get().then((doc) => {\n        if (doc.exists) {\n          addCartItems.update({\n            addCartProductQuantity: doc.data().addCartProductQuantity + 1,\n          });\n          alert.success(\"Siparişiniz Tekrar eklemiştir\");\n        } else {\n          db.collection(\"personList\")\n            .doc(uidLoc)\n            .collection(\"cartList\")\n            .doc(addItem.id)\n            .set({\n              addCartProductName: addItem.data().productName,\n              addCartProductPrice: addItem.data().price,\n              addCartProductQuantity: addItem.data().quantity,\n              addCartProductTime: addItem.data().time,\n              addCartProductKind: addItem.data().kind,\n            })\n            .then(() => {\n              alert.success(\"Siparişiniz Başarıyla eklemiştir\");\n            })\n            .catch((error) => {\n              console.error(\"Error writing document: \", error);\n            });\n        }\n      });\n    }\n  };\n\n\n\n  const addFavoriList = (addItem) => {\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n    if (uidLoc === null) {\n      alert.error(\"Giriş Yapmadan Sipariş Veremezsiziniz\");\n    } else {\n      const addCartItems = db\n        .collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"favoriList\")\n        .doc(addItem.id);\n      addCartItems.get().then((doc) => {\n        if (doc.exists) {\n          alert.warning(\"Zaten Favori Listenizde Bulunmaktadır.\");\n        } else {\n          db.collection(\"personList\")\n            .doc(uidLoc)\n            .collection(\"favoriList\")\n            .doc(addItem.id)\n            .set({\n              addFavProductName: addItem.data().productName,\n              addFavProductPrice: addItem.data().price,\n              addFavProductQuantity: addItem.data().quantity,\n              addFavProductTime: addItem.data().time,\n              addFavProductKind: addItem.data().kind,\n              addFavProductImg: addItem.data().img,\n            })\n            .then(() => {\n              alert.success(\"Ürün FavoriListe Eklendi\");\n            })\n            .catch((error) => {\n              console.error(\"Error writing document: \", error);\n            });\n        }\n      });\n    }\n  };\n\n  return (\n    <Wrapper>\n      {products.map((item) => (\n        <CardContainer>\n          <ProductImg>\n            <div>\n              <img src={item.data().img} alt=\"kahve\" />\n            </div>\n          </ProductImg>\n          <ProductName>\n            <span>{item.data().productName}</span>\n          </ProductName>\n          <ProductType>\n            <div className=\"makeTime\">\n              <span>Hazırlanış Süresi : {item.data().time}</span>\n            </div>\n            <div className=\"favoriIcon\" onClick={() => addFavoriList(item)}>\n              <FavoriteBorderIcon\n                style={{ fontSize: \"30px\", color: \"red\" }}\n                className=\"icon\"\n              />\n            </div>\n          </ProductType>\n          <ProductCount>\n            <span>{item.data().price} ₺</span>\n            <span>{item.data().kind}</span>\n          </ProductCount>\n          <ProductBttn>\n            <div onClick={() => addProducttoCart(item)}>\n              <button>Sepete Ekle</button>\n            </div>\n          </ProductBttn>\n        </CardContainer>\n      ))}\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  margin-top: 20px;\n  margin-bottom: 30px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: center;\n  width: 300px;\n\n  border: 1px solid lightgray;\n  border-radius: 15px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.05), 0 0px 40px rgba(0, 0, 0, 0.08);\n\n  padding-top: 30px;\n  padding-bottom: 30px;\n  margin-left: 30px;\n  margin-bottom: 30px;\n  :hover {\n    cursor: pointer;\n    div {\n      visibility: visible;\n    }\n  }\n  @media only screen and (max-width:725px){\n    width: 240px;\n\n  }\n\n\n\n\n`;\nconst ProductImg = styled.div`\n    @media only screen and (max-width:725px){\n    width: 100%;\n\n  }\n  div {\n    img {\n      width: 200px;\n      height: 200px;\n      border-radius: 15px;\n      @media only screen and (max-width:725px){\n    \n\n  }\n    \n    }\n\n    display: flex;\n    justify-content: center;\n  }\n`;\nconst ProductName = styled.div`\n  padding-top: 10px;\n  span {\n    font-weight: bolder;\n    font-size: 20px;\n    display: flex;\n    justify-content: center;\n  }\n`;\nconst ProductType = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  padding-top: 10px;\n  margin-top: 7px;\n  margin-bottom: 7px;\n  height: 100%;\n  background-color: #91091e;\n  .makeTime {\n    span {\n      color: white;\n      padding-bottom: 5px;\n      padding-top: 5px;\n      align-self: center;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  .favoriIcon {\n    display: flex;\n    align-items: center;\n  }\n`;\nconst ProductCount = styled.div`\n  span {\n    font-weight: bolder;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n  }\n  padding-top: 10px;\n`;\nconst ProductBttn = styled.div`\n  div {\n    display: flex;\n    justify-content: center;\n    /* visibility: hidden; */\n    margin-top: 5px;\n\n    button {\n      border: none;\n      outline: none;\n      outline-style: none;\n      padding: 14px;\n      padding-right: 35px;\n      padding-left: 35px;\n      border-radius: 10px;\n      background-color: white;\n      color: #fc8621;\n      border: 1px solid #fc8621;\n      :hover {\n        background-color: #fc8621;\n        color: white;\n      }\n    }\n  }\n  padding-top: 10px;\n`;\n\nexport default Card;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Header.js",["101","102","103","104","105","106","107","108","109","110","111","112"],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Menu.js",[],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/SingUp.js",["113","114","115","116","117","118"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { auth, providerFacebook, providerGoogle } from \"../firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alert from \"alertifyjs\";\nimport {\n  login,\n  logout,\n  selectUser,\n} from \"../reduxtoolkit/features/login/loginSlice\";\n\nfunction SingUp() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.loginRed);\n  const inputName = useRef(null);\n  const inputSurname = useRef(null);\n  const inputEmail = useRef(null);\n  const inputPassword = useRef(null);\n\n  const singUpPasswordAndEmail = (event) => {\n    event.preventDefault();\nif(inputName.current.value === \"\" ||\ninputSurname.current.value === \"\" ||\ninputEmail.current.value === \"\" \n)\n{\n  alert.error(\"Boş bırakılan yerleri doldurunuz\")\n}\nelse{\n  auth\n        .createUserWithEmailAndPassword(\n          inputEmail.current.value,\n          inputPassword.current.value\n        )\n        .then(function (result) {\n          return result.user.updateProfile({\n            displayName:\n              inputName.current.value + \" \" + inputSurname.current.value,\n          });\n        })\n        .catch((err) => {\n          if (err.code ===\"auth/invalid-email\") {\n            alert.error(\"Desteklenmeyen e-mail şekli\")\n            \n            }\n            else if (err.code ===\"auth/weak-password\")\n            {\n              alert.error(\"6 karakterden uzun şifre giriniz\")\n            }\n        });\n}\n\n\n\n\n   \n  };\n\n  const singUpGoogle = () => {\n    auth.signInWithPopup(providerGoogle).catch((error) => console.log(\"Hata\"));\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(login(authUser));\n      }\n    });\n  };\n\n  return (\n    <Wrapper>\n      <PageTitle>\n        <Link to=\"/\" className=\"link\">\n          <span>bitermoscoffe</span>\n        </Link>\n      </PageTitle>\n\n      <SingUpContainer>\n        <div className=\"withSocialMedia\">\n          <div className=\"title\">\n            <span>Sosyal medya ile üye ol </span>\n          </div>\n          <div className=\"socialMediaIcon\">\n            \n            <div className=\"googleIcon\" onClick={singUpGoogle}>\n              <img\n                src=\"https://img-authors.flaticon.com/google.jpg\"\n                alt=\"googleIcon\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"withEmailPassaword\">\n          <div className=\"title\">\n            <span>E-posta adresi ile üye ol</span>\n          </div>\n          <div className=\"userForm\">\n            <form onSubmit={singUpPasswordAndEmail}>\n              <input type=\"text\" placeholder=\"Ad\" id=\"name\" ref={inputName} />\n              <input\n                type=\"text\"\n                placeholder=\"Soyad\"\n                id=\"surname\"\n                ref={inputSurname}\n              />\n              <input\n                type=\"text\"\n                placeholder=\"E-posta Adresi\"\n                id=\"eposta\"\n                ref={inputEmail}\n              />\n              <input\n                type=\"password\"\n                placeholder=\"Şifre\"\n                id=\"password\"\n                ref={inputPassword}\n              />\n              <div className=\"singUpBttn\">\n                <button>Üye Ol</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </SingUpContainer>\n    </Wrapper>\n  );\n}\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  max-width: 472px;\n  width: 100%;\n  margin: 60px auto;\n  color: #484848;\n`;\n\nconst PageTitle = styled.div`\n  .link {\n    text-decoration: none;\n    span {\n      font-size: xx-large;\n      font-weight: 700;\n      color: #6f4e37;\n    }\n  }\n`;\n\nconst SingUpContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 72px;\n  border: 1px solid #e5e5e5;\n  border-radius: 8px;\n  max-width: 472px;\n  width: 100%;\n  margin: 50px auto;\n  color: #484848;\n  .withSocialMedia {\n    .socialMediaIcon {\n      display: flex;\n      flex-direction: row;\n      margin-top: 18px;\n      margin-bottom: 18px;\n      justify-content: space-evenly;\n      .googleIcon,\n      .facebookIcon {\n        display: flex;\n        justify-content: center;\n        align-content: center;\n        border-radius: 4px;\n        height: 100%;\n        border: 1px solid lightgray;\n        :hover {\n          cursor: pointer;\n        }\n        img {\n          padding-left: 5px;\n          width: 50px;\n          height: 50px;\n        }\n      }\n    }\n  }\n  .withEmailPassaword {\n    display: flex;\n    flex-direction: column;\n    .userForm {\n      form {\n        display: flex;\n        flex-direction: column;\n        margin-top: 10px;\n      }\n      input {\n        margin-top: 30px;\n        outline: none;\n        background-color: lightgray;\n        outline-width: 0;\n        padding: 10px;\n        display: flex;\n        flex-direction: row;\n        border: 1px solid lightgray;\n        align-items: center;\n        color: #6f4e37;\n        background-color: white;\n        border-radius: 10px;\n      }\n    }\n  }\n  .singUpBttn {\n    margin-top: 20px;\n    button {\n      border: none;\n      min-width: 180px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n      border-radius: 20px;\n      background-color: #54e346;\n      color: white;\n      :hover {\n        background-color: #03c03c;\n      }\n    }\n  }\n`;\n\nexport default SingUp;","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/SingIn.js",["119","120"],"import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FcGoogle } from \"react-icons/fc\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth, providerGoogle } from \"../firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  login,\n} from \"../reduxtoolkit/features/login/loginSlice\";\nfunction SingIn() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.loginRed);\n  const inputEmail = useRef(null);\n  const inputPassword = useRef(null);\n  const [alertMesage, setAlertMesage] = useState(\"\")\n  const history = useHistory();\n\n  const singInwithEmailandPassword = (event) => {\n    event.preventDefault();\nif (inputEmail.current.value===\"\" && inputPassword.current.value===\"\" ) {\n setAlertMesage(\"Boş bırakıldı gerekli alanları doldurunuz\")\n  \n}\n\nelse{\n  console.log(inputEmail.current.value + \" \" + inputPassword.current.value);\n\n    auth\n      .signInWithEmailAndPassword(\n        inputEmail.current.value,\n        inputPassword.current.value\n      )\n      .then((user) => {\n        const emailUserInfo = [];\n\n        dispatch(login(user.user));\n        console.log(\"Çalıştı\");\n        history.push(\"/\")\n      })\n      .catch((error) => {\n        if (error.code ===\"auth/wrong-password\") {\n          setAlertMesage(\"Üzgünüz, şifren yanlıştı. \")\n          \n          }\n          else if (error.code===\"auth/user-not-found\") {\n            setAlertMesage(\"Girdiğin kullanıcı adı bir hesaba ait değil.\")\n            \n          }\n      });\n\n}\n    \n  };\n\n  const singInGoogle = () => {\n    auth.signInWithPopup(providerGoogle).catch((error) => console.log(\"Hata\"));\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(login(authUser));\n      }\n    });\n  };\n\n  return (\n    <Wrapper>\n      <PageTitle>\n        <Link to=\"/\" className=\"link\">\n          <span>bitermoscoffe</span>\n        </Link>\n      </PageTitle>\n\n      <SingInContainer>\n        <div className=\"title\">\n          <span>Giriş Yap</span>\n        </div>\n        <div className=\"inputContainer\">\n        \n          <form  onSubmit={singInwithEmailandPassword}>\n            <input\n              type=\"text\"\n              placeholder=\"Email adresinizi giriniz\"\n              ref={inputEmail}\n            />\n            <input type=\"password\" placeholder=\"password\" ref={inputPassword} />\n            \n         \n          <button >\n          Giriş Yap\n          \n          </button>\n         \n          </form>\n          \n        \n          \n         \n          \n        </div>\n        <div style={{color:\"red\", fontSize:\"15px\" , marginTop:\"10px\", margin:\"10px\"}}>\n        <span>\n        {alertMesage}\n        </span>\n      \n        </div>\n        <div className=\"withSocialMedia\">\n          <div className=\"socialMediaTitle\">\n            <span>Sosyal medya ile giriş yap</span>\n          </div>\n          <div className=\"socialMediaIcon\">\n            \n            <div className=\"googleIcon\" onClick={singInGoogle}>\n              <FcGoogle />\n            </div>\n          </div>\n        </div>\n      </SingInContainer>\n    </Wrapper>\n  );\n}\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  max-width: 472px;\n  width: 100%;\n  margin: 60px auto;\n  color: #484848;\n`;\n\nconst PageTitle = styled.div`\n  .link {\n    text-decoration: none;\n    span {\n      font-size: xx-large;\n      font-weight: 700;\n      color: #6f4e37;\n    }\n  }\n`;\n\nconst SingInContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 72px;\n  border: 1px solid #e5e5e5;\n  border-radius: 8px;\n  max-width: 472px;\n  width: 100%;\n  margin: 50px auto;\n  color: #484848;\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .title {\n    margin-bottom: 20px;\n    span {\n      font-size: 30px;\n      font-weight: 700;\n    }\n  }\n  .inputContainer > form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    input {\n      border: 1px solid lightgray;\n      padding: 10px 20px;\n      outline: none;\n      border-radius: 10px;\n      :nth-child(2) {\n        margin-top: 30px;\n      }\n    }\n    button {\n      margin-top: 20px;\n      border: none;\n      outline: none;\n      padding: 10px 10px;\n      border-radius: 10px;\n      color: white;\n      background-color: #54e346;\n      :hover {\n        background-color: #03c03c;\n      }\n    }\n  }\n  .withSocialMedia {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top: 1px solid lightgray;\n    width: 100%;\n    margin-top: 20px;\n    .socialMediaTitle {\n      margin-top: 15px;\n      span {\n        font-size: 20px;\n        font-weight: 700;\n        color: black;\n      }\n    }\n    .socialMediaIcon {\n      display: flex;\n      flex-direction: row;\n      font-size: 35px;\n      margin-top: 10px;\n      :hover {\n        cursor: pointer;\n      }\n      .facebookIcon {\n        margin-right: 40px;\n      }\n    }\n  }\n`;\n\nexport default SingIn;","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Cart.js",["121","122","123","124","125","126"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport alert from \"alertifyjs\";\nimport db from \"../firebase\";\nimport StepContainer from \"./StepContainer\";\nimport { cartConfirmHiddle } from \"../reduxtoolkit/features/product/productSlice\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nfunction Cart() {\n  const [locId, setlocId] = useState(\"\");\n  const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n  const cartSelector = useSelector((state) => state.productRed);\n  const [cartListConfirm, setCartListConfirm] = useState([]);\n  const dispatch = useDispatch();\n  const [cartProductList, setcartProductList] = useState([]);\n  const [cartConfirmPrice, setCartConfirmPrice] = useState(0);\n  const [cartConfirmTime, setCartConfirmTime] = useState(0);\n  // const [price, setPrice] = useState(0);\n\n  const loginSelector = useSelector((state) => state.loginRed);\n\n  useEffect(() => {\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n    if (uidLoc !== null) {\n      db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartList\")\n        .onSnapshot((onSnapshot) => {\n          const cartItem = [];\n          onSnapshot.forEach((doc) => {\n            cartItem.push(doc);\n          });\n          setcartProductList(cartItem);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    setlocId(uidLoc);\n  }, [locId]);\n\n  useEffect(() => {\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n    if (uidLoc !== null) {\n      db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartConfirmList\")\n        .onSnapshot((onSnapshot) => {\n          const cartConfrimListItems = [];\n          onSnapshot.forEach((doc) => {\n            cartConfrimListItems.push(doc);\n          });\n          setCartListConfirm(cartConfrimListItems);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (cartSelector.cartConfirmHid === false) {\n      console.log(\"B\");\n\n      const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n      cartListConfirm.map((item) =>\n        db\n          .collection(\"personList\")\n          .doc(uidLoc)\n          .collection(\"pastOrderList\")\n          .doc(item.id)\n          .set({\n            cartPastOrderListName: item.data().cartConfirmListName,\n            cartPastOrderListPrice: item.data().cartConfirmListPrice,\n            cartPastOrderListQunatity: item.data().cartConfirmListQunatity,\n            cartPastOrderListTime: item.data().cartConfirmListTime,\n            cartPastOrderListKind:item.data().cartConfirmListKin\n          })\n      );\n\n      cartListConfirm.map((item) =>\n        db\n          .collection(\"personList\")\n          .doc(uidLoc)\n          .collection(\"cartConfirmList\")\n          .doc(item.id)\n          .delete()\n          .then(() => {\n            // console.log(\"Success\");\n          })\n          .catch((error) => {\n            console.log(error);\n          })\n      );\n    }\n  }, [cartSelector.cartConfirmHid]);\n\n  useEffect(() => {\n    let countPrice = 0;\n    let countTime = 0;\n\n    cartListConfirm.map((item) => {\n      countPrice +=\n        item.data().cartConfirmListPrice * item.data().cartConfirmListQunatity;\n      countTime += item.data().cartConfirmListTime;\n    });\n    setCartConfirmPrice(countPrice);\n\n    setCartConfirmTime(countTime);\n  }, [cartListConfirm]);\n\n  const addClicReduce = (item) => {\n    if (item.data().addCartProductQuantity === 1) {\n      db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartList\")\n        .doc(item.id)\n        .delete()\n        .then(() => {\n          alert.success(\"Ürün Sepetten Kaldırıldı\");\n        })\n        .catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n    }\n\n    else{\n      db.collection(\"personList\")\n      .doc(uidLoc)\n      .collection(\"cartList\")\n      .doc(item.id)\n      .update({\n        addCartProductQuantity: item.data().addCartProductQuantity -1,\n      });\n\n    }\n  };\n\n  const addClickIncreuce = (item) => {\n    db.collection(\"personList\")\n      .doc(uidLoc)\n      .collection(\"cartList\")\n      .doc(item.id)\n      .update({\n        addCartProductQuantity: item.data().addCartProductQuantity + 1,\n      });\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        {uidLoc === null ? (\n          <CartLoginOut>\n            <div>\n              <span>Giriş Yapmadan Alışveriş Yapamazsınız</span>\n            </div>\n          </CartLoginOut>\n        ) : cartProductList.length === 0 &&\n          cartListConfirm.length === 0 &&\n          uidLoc !== null ? (\n          <div className=\"cartListEmpty\">\n            <div>\n              <span>Sepeteniz</span>\n            </div>\n            <div>\n              <span>Boş</span>\n            </div>\n          </div>\n        ) : cartListConfirm.length === 0 ? (\n          <CartWrapper>\n            {cartProductList.map((item) => (\n              <CartContainer>\n                <ProductCartInfo>\n                  <div className=\"productInfo\">\n                    <div className=\"productName\">\n                      <span>{item.data().addCartProductName}</span>\n                    </div>\n                    <div className=\"thermosLitre\">\n                      <span>\n                        {item.data().addCartProductKind} x{\" \"}\n                        {item.data().addCartProductQuantity}\n                      </span>\n                    </div>\n                    <div className=\"amount\">\n                      <span>\n                        {item.data().addCartProductPrice *\n                          item.data().addCartProductQuantity}\n                        .00 ₺\n                      </span>\n                    </div>\n                    <div className=\"makeTime\">\n                      <div className=\"totalTime\">\n                        <span>{item.data().addCartProductTime + 15} dk </span>\n                      </div>\n                      <div className=\"deliveryAndMakeTime\">\n                        <span>\n                          Hazırlanış: {item.data().addCartProductTime} <br />\n                          Teslimat: 15dk\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"remove\">\n                  {item.data().addCartProductQuantity===1?<DeleteForeverIcon\n                    onClick={() => addClicReduce(item)}\n                    />:\n                    <div className=\"reduce\" onClick={() => addClicReduce(item)} >\n                    -\n                  </div>}\n                   \n                    <div className=\"count\">\n                      {item.data().addCartProductQuantity}\n                    </div>\n\n                    <div\n                      className=\"increuce\"\n                      onClick={() => addClickIncreuce(item)}\n                    >\n                      +\n                    </div>\n                  </div>\n                </ProductCartInfo>\n              </CartContainer>\n            ))}\n\n            <ButtonConfirm>\n              <Link className=\"link\" to=\"/cartConfirm\">\n                <div>\n                  <button>Sepeti Onayla</button>\n                </div>\n              </Link>\n            </ButtonConfirm>\n          </CartWrapper>\n        ) : (\n          <div className=\"cartConfirm\">\n            <div className=\"cartConfirmTitle\">\n              <span>Sipariş Verdiğinz Ürünler</span>\n            </div>\n\n            {cartListConfirm.map((item) => (\n              <div className=\"cartConfirmDesc\">\n                <span>\n                  {item.data().cartConfirmListName} x{\" \"}\n                  {item.data().cartConfirmListQunatity}\n                </span>\n              </div>\n            ))}\n            <div className=\"line\" />\n            <div className=\"cartConfirmDesc\">\n              <span style={{ color: \"black\" }}>\n                Sipariş Toplamı : {cartConfirmPrice}\n              </span>\n            </div>\n\n            <div className=\"cartConfirmDesc\">\n              <span style={{ color: \"black\" }}>\n                Teslim Süresi : {cartConfirmTime}\n              </span>\n            </div>\n            <StepContainer />\n          </div>\n        )}\n      </Container>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div``;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  margin-right: 20px;\n  margin-left: 15px;\n  border-radius: 10px;\n  border: 1px solid brown;\n  .cartListEmpty {\n    color: red;\n    display: flex;\n    margin: 30px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 20px;\n  }\n\n  .cartConfirm {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    cursor: default;\n    .cartConfirmTitle {\n      margin-top: 10px;\n      margin-bottom: 20px;\n      font-size: 17px;\n      font-weight: bold;\n    }\n\n    .line {\n      border: 1px solid brown;\n      width: 100%;\n      height: 6px;\n      background-color: brown;\n      margin-bottom: 10px;\n      border-radius: 100px;\n    }\n\n    .cartConfirmDesc {\n      font-size: 17px;\n      font-weight: bold;\n      color: brown;\n      margin-bottom: 10px;\n    }\n  }\n`;\nconst CartWrapper = styled.div``;\n\nconst CartLoginOut = styled.div`\n  display: flex;\n  margin: 30px;\n\n  div {\n    span {\n      color: red;\n      font-size: 20px;\n    }\n  }\n`;\n\nconst CartContainer = styled.div`\n  width: 220px;\n  border-top: 2px solid brown;\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-left: 5px;\n`;\n\nconst ProductCartInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-left: 10px;\n  margin-top: 10px;\n  .productInfo {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 30px;\n\n    .productName {\n      span {\n        font-size: 20px;\n        font-weight: 800;\n      }\n    }\n    .thermosLitre {\n      margin-top: 4px;\n      span {\n        font-size: 15px;\n        color: brown;\n        font-weight: 800;\n      }\n    }\n\n    .amount {\n      margin-top: 5px;\n      span {\n        font-size: 20px;\n        color: brown;\n        font-weight: 500;\n      }\n    }\n\n    .makeTime {\n      margin-top: 5px;\n      .totalTime {\n        margin-bottom: 4px;\n        span {\n          font-size: 20px;\n        }\n      }\n      .deliveryAndMakeTime {\n        span {\n          font-size: 14px;\n          font-weight: 700;\n          color: #bbbbbb;\n        }\n      }\n    }\n  }\n\n  .remove {\n    display: flex;\n    flex-direction: row;\n    font-size: 18px;\n    width: 75px;\n    height: 30px;\n\n    margin-left: 20px;\n    border: 2px solid lightgray;\n    border-radius: 5px;\n    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.08);\n    :hover {\n      cursor: pointer;\n    }\n    .reduce {\n      margin-right: 20px;\n      margin-left: 5px;\n    }\n    .count {\n      margin-right: 15px;\n    }\n    .increuce {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst ButtonConfirm = styled.div`\n  margin-bottom: 20px;\n  button {\n    border: none;\n    color: white;\n    background-color: #54e346;\n    padding: 10px 20px;\n    font-weight: 600;\n    font-size: 19px;\n    border-radius: 10px;\n    :hover {\n      background-color: #03c03c;\n    }\n  }\n  .link {\n    text-decoration: none;\n    color: white;\n    :hover {\n      color: white;\n    }\n  }\n`;\nexport default Cart;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/CartConfirm.js",["127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { useEffect, useState } from \"react\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport addMonths from \"date-fns/addMonths\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport alert from \"alertifyjs\";\nimport DatePicker from \"react-datepicker\";\nimport { Button, Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport db from \"../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nfunction CartConfirm() {\n  const [modal, setModal] = useState(false);\n  const [timeModal, setTimeModal] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [hourss, setHourss] = useState(new Date().getHours() + 1);\n  const [orderTime, setOrderTime] = useState(\"\");\n  const time = new Date();\n  const oorderTime = time.setMinutes(time.getHours() + 60);\n  const [date, setDate] = useState(oorderTime);\n  const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n  const [cartConfirm, setCartConfirm] = useState([]);\n  const [cartConfirmTime, setCartConfirmTime] = useState(0);\n  const [cartConfirmPrice, setCaetConfirmPrice] = useState(0);\n  const [myAddress, setMyAddress] = useState([])\n  const [myAddressTitle, setMyAddressTitle] = useState([])\n  const a = 0;\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let time = new Date(date);\n    let hours = time.getHours();\n    let minutes = time.getMinutes();\n    let day = time.getDay();\n    var gunler = [\n      \"pazar\",\n      \"pazartesi\",\n      \"salı\",\n      \"çarşamba\",\n      \"perşembe\",\n      \"cuma\",\n      \"cumartesi\",\n    ];\n\n    setOrderTime(hours + \":\" + minutes + \" \" + gunler[day]);\n  }, [date]);\n\n  useEffect(() => {\n    db.collection(\"personList\")\n      .doc(uidLoc)\n      .collection(\"cartList\")\n      .onSnapshot((onSnapshot) => {\n        const cartConfirmItem = [];\n        const cartConfirmItemPrice = 0;\n        onSnapshot.forEach((doc) => {\n          cartConfirmItem.push({\n            cartConfirmProductId: doc.id,\n            cartConfirmProducData: doc.data(),\n          });\n        });\n        setCartConfirm(cartConfirmItem);\n      });\n  }, []);\n\n\n  useEffect(() => {\n    db.collection(\"personList\")\n    .doc(uidLoc)\n    .collection(\"addressList\")\n    .onSnapshot((onSnapshot) => {\n      const addressListItems = [];\n      onSnapshot.forEach((doc) => {\n        addressListItems.push(doc.data().addressTitle);\n      });\n      setMyAddressTitle(addressListItems);\n    });\n  }, [])\n\n  useEffect(() => {\n    if(adress===\"\")\n    {\n      db.collection(\"personList\")\n      .doc(uidLoc)\n      .collection(\"addressList\")\n      .onSnapshot((onSnapshot) => {\n        const addressListItems = [];\n        onSnapshot.forEach((doc) => {\n          addressListItems.push(doc);\n        });\n        setMyAddress(addressListItems);\n      });\n    }\n    else{\n      db.collection(\"personList\")\n      .doc(uidLoc)\n      .collection(\"addressList\").where(\"addressTitle\",\"==\",adress)\n      .onSnapshot((onSnapshot) => {\n        const addressListItems = [];\n        onSnapshot.forEach((doc) => {\n          addressListItems.push(doc);\n        });\n        setMyAddress(addressListItems);\n      });\n\n    }\n   \n  },[myAddress])\n\n\n\n  useEffect(() => {\n    let countPrice = 0;\n    let countTime = 0;\n\n    cartConfirm.map((item) => {\n      countPrice +=\n        item.cartConfirmProducData.addCartProductPrice *\n        item.cartConfirmProducData.addCartProductQuantity;\n      countTime += item.cartConfirmProducData.addCartProductTime;\n    });\n    setCaetConfirmPrice(countPrice);\n    // console.log(countPrice)\n    // console.log(countTime)\n\n    setCartConfirmTime(countTime);\n  });\n\n  const timeToggle = () => {\n    setTimeModal(!timeModal);\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const orderClicled = () => {\n    if(adress===\"\")\n    {\n      alert.error(\"Adress Seçimi Yapmadan Sipariş Veremezsiniz\")\n    }\n    else{\n      const email = JSON.parse(localStorage.getItem(\"userEmailLoc\"));\n      const userInfoServer = {\n        email: email,\n        summary: [],\n        price: cartConfirmPrice,\n        time: cartConfirmTime,\n      };\n      cartConfirm.map((item) =>\n        userInfoServer.summary.push({\n          name: \"İsim: \" + item.cartConfirmProducData.addCartProductName,\n          quantity: \"Adet: \" + item.cartConfirmProducData.addCartProductQuantity,\n        })\n      );\n      axios\n        .post(\"http://localhost:3005/create\", userInfoServer)\n        .then(() => console.log(\"Book Created\"))\n        .catch((err) => {\n          console.error(err);\n        });\n      setModal(!modal);\n    }\n   \n  };\n\n  const cartConfirmClicked = () => {\n    setModal(!modal);\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n    cartConfirm.map((item) =>\n\n      db\n        .collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartConfirmList\")\n        .doc(item.cartConfirmProductId)\n        .set({\n          cartConfirmListName: item.cartConfirmProducData.addCartProductName,\n          cartConfirmListPrice: item.cartConfirmProducData.addCartProductPrice,\n          cartConfirmListQunatity:\n            item.cartConfirmProducData.addCartProductQuantity,\n          cartConfirmListTime: item.cartConfirmProducData.addCartProductTime,\n          cartConfirmListKin:item.cartConfirmProducData.addCartProductKind\n          \n        })\n    );\n\n    cartConfirm.map((item) =>\n      db\n        .collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartList\")\n        .doc(item.cartConfirmProductId)\n        .delete()\n        .then(() => {\n          // console.log(\"Success\");\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    );\n  };\n\n  const classes = useStyles();\n  const [adress, setAdress] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setAdress(event.target.value);\n\n  };\n\n  return (\n    <Wrapper>\n      <CartConfirmContainer>\n        <HeaderContainer>\n          <div className=\"pageTitle\">\n          <Link className=\"link\" to=\"/\">\n          <span>bitermoscoffe</span>\n          </Link>\n            \n          </div>\n          <div className=\"deliveryTimeHeader\">\n            <span>10-{cartConfirmTime + 10}dk</span>\n          </div>\n        </HeaderContainer>\n        <Order>\n          <OrderDec>\n            <div className=\"deliveryTime\">\n              <div className=\"deliveryTimeTitle\">\n                <span>Telimat Yöntemi</span>\n              </div>\n              <div className=\"deliveryTimeChoose\">\n                <form>\n                  <div>\n                    <input type=\"radio\" name=\"time\" id=\"now\" />\n                    <label htmlFor=\"now\">Şimdi Teslim Et</label>\n                  </div>\n                  <div>\n                    <div>\n                      <input\n                        type=\"radio\"\n                        name=\"time\"\n                        id=\"time\"\n                        onClick={timeToggle}\n                      />\n                      <label htmlFor=\"time\">Zaman Belirleme</label>\n                    </div>\n                    <div className=\"defaultDeliveryTime\">\n                      <span>{\"   Geçerli Zaman  \" + orderTime}</span>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </OrderDec>\n          <OrderUserDec>\n            <div className=\"orderUserAdress\">\n              <div className=\"titleAdress\">\n                <div>\n                  <span>Teslimat Adresi</span>\n                </div>\n                <div>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-label\">Adreslerim</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={adress}\n                      onChange={handleChange}\n                    >\n                    {myAddressTitle.map((item)=>(\n                      <MenuItem value={item}>{item}</MenuItem>\n                    ))}\n                    \n                      \n                    </Select>\n                  </FormControl>\n                 \n                </div>\n               \n              </div>\n              {myAddress.length===0 &&\n                <div className=\"emptyAdress\">\n              Hiç Bir Adresiniz Bulunmamaktadır. <Link to=\"/myAcount\">Hesabıma</Link> giderek yeni adres ekleyiniz\n                </div>}\n             \n              <div className=\"userAdress\">\n             \n              {adress===\"\"?<div className=\"adress\">Bir Adress giriniz</div>:\n             \n              <AddressLocations >\n              {\n                myAddress.map((item)=>(\n                  <AddressLocation >\n                  {item.data().addressLocation}\n                  </AddressLocation>\n                \n                ))\n              }</AddressLocations>}\n                \n               \n              </div>\n            </div>\n            <div style={{ marginTop: \"20px\" }}>\n              <span style={{ fontSize: \"20px\", fontWeight: \"600\" }}>\n                Siparişleriniz\n              </span>\n            </div>\n\n            <div className=\"ordersInfo\">\n              <div className=\"ordersTitle\">\n                <span>No:</span>\n                <span>Sipariş</span>\n                <span>Fiyat</span>\n              </div>\n              <div className=\"ordersContainer\">\n                {cartConfirm.map((item, index) => (\n                  <div key={index}>\n                    <div className=\"ordersIndex\">{index + 1}</div>\n                    <div className=\"ordersName\">\n                      {item.cartConfirmProducData.addCartProductName}\n                    </div>\n                    <div className=\"ordersPrice\">\n                      {item.cartConfirmProducData.addCartProductPrice *\n                        item.cartConfirmProducData.addCartProductQuantity}\n                      .00 ₺\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </OrderUserDec>\n        </Order>\n        <OrderButton>\n          <button onClick={orderClicled}>\n            Sipariş Ver\n            <br />\n            {cartConfirmPrice}.00₺\n          </button>\n        </OrderButton>\n      </CartConfirmContainer>\n\n      <Modal isOpen={modal}>\n        <ModalBody\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: \"20px\",\n            fontWeight: \"600\",\n          }}\n        >\n          Siparişinz Alınmıştır <br />\n          Afiyet Oldun\n        </ModalBody>\n        <ModalFooter>\n          <Link to=\"/\">\n            <Button color=\"danger\" onClick={cartConfirmClicked}>\n              Kapat\n            </Button>\n          </Link>\n        </ModalFooter>\n      </Modal>\n      <Modal isOpen={timeModal} toggle={timeToggle}>\n        <ModalBody\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontWeight: \"600\",\n          }}\n        >\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setDate(date)}\n            locale=\"pt-TR\"\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={60}\n            dateFormat=\"Pp\"\n            inline\n            minTime={setHours(setMinutes(new Date(), a), hourss)}\n            maxTime={setHours(setMinutes(new Date(), 30), 23)}\n            minDate={new Date()}\n            maxDate={new Date()}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={timeToggle}>\n            Kapat\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Wrapper>\n  );\n}\nconst Wrapper = styled.div``;\nconst CartConfirmContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst HeaderContainer = styled.div`\n  width: 100%;\n\n  background-color: #6f4e37;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n  @media only screen and (max-width:725px){\n    display: flex;\n  flex-direction: column;\n   \n}\n\n  .pageTitle {\n    span {\n      color: white;\n      font-size: 30px;\n    }\n  }\n  .deliveryTimeHeader {\n    border: 1px solid #29bb89;\n    padding: 10px 10px;\n    border-radius: 10px;\n    background-color: #29bb89;\n    height: 100%;\n    span {\n      color: white;\n      font-size: 19px;\n      font-weight: 700;\n    }\n  }\n`;\nconst Order = styled.div`\n  margin-top: 120px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  @media only screen and (max-width:725px){\n    display: flex;\n  flex-direction: column;\n   \n}\n\n\n\n  \n`;\n\nconst AddressLocations = styled.div`\n\n`\nconst OrderDec = styled.div`\n  display: flex;\n  flex-direction: column;\n  .deliveryTime {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    .deliveryTimeTitle {\n      span {\n        font-size: 20px;\n        font-weight: 600;\n      }\n    }\n    .deliveryTimeChoose {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      padding: 10px 50px;\n      padding-right: 180px;\n      height: 100%;\n      border: 2px solid #6f4e37;\n      border-radius: 5px;\n      margin-bottom: 40px;\n      margin-top: 30px;\n      div {\n        font-size: 18px;\n\n        label {\n          margin-left: 20px;\n\n          :hover {\n            cursor: pointer;\n          }\n        }\n\n        input {\n          font-size: 19px;\n          :hover {\n            cursor: pointer;\n          }\n        }\n        .defaultDeliveryTime {\n          font-size: 15px;\n        }\n      }\n    }\n  }\n  .addNote {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    .addNoteTitle {\n      span {\n        font-size: 20px;\n        font-weight: 600;\n      }\n      margin-bottom: 20px;\n    }\n    .add {\n      width: 100%;\n\n      height: 100%;\n      border: 2px solid #6f4e37;\n      border-radius: 5px;\n      textarea {\n        border: none;\n        outline: none;\n        width: 100%;\n        padding: 10px 20px;\n      }\n    }\n  }\n`;\n\nconst AddressLocation = styled.textarea`\n\nwidth:100%;\nheight:100%;\nfont-size:18px;\noutline-width:0px;\nborder:none;\n\n  @media only screen and (max-width:725px){\n    display: flex;\n  flex-direction: column;\n   \n}\n\n`\nconst OrderUserDec = styled.div`\n  .orderUserAdress {\n    display: flex;\n    flex-direction: column;\n    .emptyAdress{\n      width:330px;\n    }\n    .titleAdress {\n      display:flex;\n      align-items:center;\n      \n      \n      span {\n        margin-right:20px;\n        font-size: 20px;\n        font-weight: 600;\n      }\n    }\n\n    .userAdress {\n      width: 300px;\n      height: 100%;\n      border: 2px solid #6f4e37;\n      padding: 10px 20px;\n      border-radius: 5px;\n      @media only screen and (max-width:725px){\n        width: 100%;\n  \n   \n}\n\n.adress{\n  .addressLocation{\n    @media only screen and (max-width:725px){\n      width: 100px;\n       \n  \n   \n}\n\n  }\n}\n    }\n  }\n\n  .ordersInfo {\n    font-size: 17px;\n    font-weight: 600px;\n    margin-top: 10px;\n    width: 100%;\n\n    border: 2px solid #6f4e37;\n    padding: 10px 20px;\n    border-radius: 5px;\n    .ordersContainer {\n      div {\n        display: flex;\n        flex-direction: row;\n        margin-left: 15px;\n        margin-top: 7px;\n      }\n\n      .ordersName {\n        margin-left: 30px;\n      }\n      .ordersPrice {\n        margin-left: 25px;\n      }\n    }\n  }\n\n  .ordersTitle {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    margin-bottom: 10px;\n  }\n`;\n\nconst OrderButton = styled.div`\n  display: flex;\n  margin-top: 60px;\n  justify-content: center;\n  button {\n    border: none;\n    padding: 10px 50px;\n    color: white;\n    background-color: #54e346;\n    border-radius: 10px;\n    font-size: 20px;\n    font-weight: 600;\n    :hover {\n      background-color: #03c03c;\n    }\n  }\n`;\nexport default CartConfirm;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/firebase.js",[],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/app/store.js",[],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/features/login/loginSlice.js",[],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/features/menu/menuSlice.js",["139"],"import { createSlice, isAsyncThunkAction } from \"@reduxjs/toolkit\";\n\nexport const menuSlice = createSlice({\n  name: \"menu\",\n  initialState: {\n    menuInfo: \"\",\n    searchInfo: \"\",\n    \n  },\n  reducers: {\n    menuSelected: (state, action) => {\n        state.menuInfo=action.payload\n    },\n    serachSelected : (state,action)=>{\n      state.searchInfo = action.payload;\n      console.log(action.payload)\n    }\n \n   \n  },\n});\n\nexport const { menuSelected,deneme,serachSelected } = menuSlice.actions;\nexport const selectMenu = (state) => state.menu.menuInfo;\n\n\nexport default menuSlice.reducer;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/StepContainer.js",["140","141"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { cartConfirmHiddle } from \"../reduxtoolkit/features/product/productSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n\n\nfunction getSteps() {\n  return [\"Hazırlanıyor\", \"Yolda\", \"Teslim Edildi\"];\n}\n\nexport default function StepContainer() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    \n    return () => {\n     \n    };\n  }, []);\n\n  const timer = setTimeout(() => {\n    let newSkipped = skipped;\n\n\nsetActiveStep(activeStep+ 1);\n\nsetSkipped(newSkipped);\n  }, 4000);\n\n  if(activeStep===3)\n  {\n    clearTimeout(timer)\n    dispatch(cartConfirmHiddle(false))\n  }\n  console.log(activeStep)\n\n\n\n\n\n  \n  \n    \n\n\n\n  \n\n\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        <div>\n          <div>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/reduxtoolkit/features/product/productSlice.js",["142"],"import { createSlice, isAsyncThunkAction } from \"@reduxjs/toolkit\";\n\nexport const productSlice = createSlice({\n  name: \"prodcut\",\n  initialState: {\n    productInfo:[],\n    cartConfirmCount:0,\n    cartConfirmPriceA:12,\n    cartConfirmHid:true,\n    \n  },\n  reducers: {\n    productList: (state, action) => {\n        state.productInfo.push(action.payload)\n       },\n\n       cartConfirmCount : (state,action)=>{\n         state.cartConfirmCount = action.payload\n       },\n       cartConfirmHiddle : (state,action)=>{\n         state.cartConfirmHid =action.payload\n        \n\n       }\n   \n   \n  },\n});\n\nexport const { productList,cartConfirmCount,cartConfirmHiddle} = productSlice.actions;\nexport const selectProduct = (state) => state.prodcut.productInfo;\n\n\nexport default productSlice.reducer;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/FavoriList.js",[],"/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/MyAcount.js",["143"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport alert from \"alertifyjs\";\nimport db from \"../firebase\";\nimport { useRef } from \"react\";\nfunction MyAcount() {\n  const [modal, setModal] = useState(false);\n  const toggle = () => {setModal(!modal) \n    setSave(true)};\n  const addressTile = useRef(null);\n  const addressLocation = useRef(null);\n  const editaddressTile = useRef(null);\n  const editaddressLocation = useRef(null);\n  const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n  const userNameLoc = JSON.parse(localStorage.getItem(\"userNameLoc\"));\n  const [save,setSave] = useState(false)\n  const [defaultTitle , setDefaultTitle] = useState(\"\")\n  const [defaultLocation , setDefaulttLocation ] = useState(\"\")\n  const [itemId , setItemId ] = useState(\"\")\nconst [myAddress, setMyAddress] = useState([])\n  const newAddAdress = (event) => {\n\n    if(save===true)\n    {\n      console.log(\"Kaydet\")\n      event.preventDefault();\n    \n      const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n      if (\n        addressTile.current.value === \"\" ||\n        addressLocation.current.value === \"\"\n      ) {\n        alert.error(\"Boş alanları doldurunnuz\");\n      } else if (addressLocation.current.value.length < 40) {\n        alert.error(\"Adresinizi biraz daha belirtiniz\");\n      } else {\n        console.log(addressTile.current.value);\n        console.log(addressLocation.current.value);\n        const addCartItems = db\n          .collection(\"personList\")\n          .doc(uidLoc)\n          .collection(\"addressList\")\n          .doc(addressTile.current.value);\n  \n        addCartItems.get().then((doc) => {\n          if (doc.exists) {\n            alert.error(\"Böyle Bir Adres Başlığı Bulunmaktadır\");\n            setModal(true);\n          } else {\n            db.collection(\"personList\")\n              .doc(uidLoc)\n              .collection(\"addressList\")\n  \n              .doc(addressTile.current.value)\n              .set({\n                addressTitle: addressTile.current.value,\n                addressLocation: addressLocation.current.value,\n              })\n              .then(() => {\n                alert.success(\"Adresiniz Başarıyla Eklenmiştir\");\n              })\n              .catch((error) => {\n                console.error(\"Error writing document: \", error);\n              });\n            setModal(!modal);\n          }\n        });\n      }\n    }\n\n  \n    \n  };\n\n\n \nuseEffect(() => {\n  db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"addressList\")\n        .onSnapshot((onSnapshot) => {\n          const addressListItems = [];\n          onSnapshot.forEach((doc) => {\n            addressListItems.push(doc);\n          });\n          setMyAddress(addressListItems);\n        });\n}, [])\n\n\nconst deleteMyAdress = (item)=>{\n\n  db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"addressList\")\n        .doc(item.id)\n        .delete()\n        .then(() => {\n          alert.success(\"Adres Silindi\");\n        })\n        .catch((error) => {\n          console.error(\"Error removing document: \", error);\n        });\n\n}\n\nconst editAddAdress = (event)=>{\n  event.preventDefault()\n  console.log(itemId)\n  console.log(editaddressTile.current.value)\n  console.log(editaddressLocation.current.value)\n\n  if(editaddressTile.current.value===\"\" || editaddressLocation.current.value === \"\")\n  {\n    alert.error(\"Değiştime işlemi yapmadınız\");\n    setModal(!modal)\n  }else if (editaddressLocation.current.value>40)\n  {\n    alert.error(\"Adressi birazdaha açıklayınız\");\n  }\n  else{\n    db.collection(\"personList\")\n    .doc(uidLoc)\n    .collection(\"addressList\")\n    .doc(itemId)\n    .update({\n      addressTitle:editaddressTile.current.value,\n      addressLocation:editaddressLocation.current.value\n    });\n    setModal(!modal)\n\n  }\n\n\n \n\n}\n// açan \nconst editMyAdress = (item)=>{\n  setSave(false)\n  setModal(!modal)\n  setDefaultTitle(item.data().addressTitle)\n  setDefaulttLocation(item.data().addressLocation)\n  setItemId(item.id)\n    \n   \n \n\n\n  \n\n  \n  \n\n}\n\n\n\n  return (\n    <Wrapper>\n      <HomaPageTitle>\n        <Link to=\"/\" className=\"link\">\n          bitermoscoffe\n        </Link>\n      </HomaPageTitle>\n\n      <MyAccountPage>\n        <PageTitle>\n          <span>Hesabım</span>\n        </PageTitle>\n        <PageHeader>\n          <ProfilImg>EG</ProfilImg>\n          <ProfilName>{userNameLoc}</ProfilName>\n        </PageHeader>\n\n        <MyInfoContainer>\n          <MyInfoDecsContainer>\n            <MyInfoDecsTitle>Profil Bilgileri</MyInfoDecsTitle>\n            <MyInfoSubDecs>\n              bitermoscoffe’daki deneyiminizi en iyi seviyede tutabilmemiz için\n              gereken bilgilerinizi buradan düzenleyebilirsiniz.\n            </MyInfoSubDecs>\n          </MyInfoDecsContainer>\n\n          <MyInfo>\n            <NameSurname>\n              <MyName>\n                <NameLabel>Ad:</NameLabel>\n                <NameInput />\n              </MyName>\n              <MySurname>\n                <SurnameLabel>Soyadı:</SurnameLabel>\n                <SurnameInput />\n              </MySurname>\n            </NameSurname>\n            <MyPassaword>\n              <MyPassawordDesc>\n                <MyPassawordDescTitle>Şifre Değişikliği</MyPassawordDescTitle>\n                <MyPassawordDescSub>\n                  Şifreniz en az bir harf, rakam veya özel karakter içermeli.\n                  Ayrıca şifreniz en az 8 karakterden oluşmalı.\n                </MyPassawordDescSub>\n              </MyPassawordDesc>\n\n              <AvailablePasswordLabel>Mevcut Şifre</AvailablePasswordLabel>\n              <AvailablePassword type=\"password\" />\n\n              <ChangePasswordLabel>Yeni Şifre</ChangePasswordLabel>\n              <ChangePassword type=\"password\" />\n            </MyPassaword>\n\n            <MyAdressContainer>\n              <MyAdressHeader>\n                <MyAdressTitle>Adreslerim</MyAdressTitle>\n\n                <MyAdressSub>\n                  {myAddress.length} teslimat adresiniz bulunmaktadır. Bu sayfadan yeni adres\n                  oluşturabilir, mevcut adreslerinizi düzenleyebilir ya da\n                  silebilirsiniz.\n                </MyAdressSub>\n              </MyAdressHeader>\n\n              <MyAdresss>\n                <MyAdressAdd onClick={toggle}>\n                  <PostAddIcon style={{ fontSize: 100 }} />\n                </MyAdressAdd>\n                {myAddress.map((item)=>(\n                  <MyAdressInfo>\n              \n                  <MyAdressName> {item.data().addressTitle}</MyAdressName>\n                  <MyAdressLocation value={item.data().addressLocation} type=\"text\"/>\n               \n                 \n                  \n                  <Buttons>\n                    <DeleteAdress onClick={()=>deleteMyAdress(item)}>Sil</DeleteAdress>\n                    <EditAdress onClick={()=>editMyAdress(item)}>Düzenle</EditAdress>\n                  </Buttons>\n                </MyAdressInfo>\n                  ))}\n              \n              </MyAdresss>\n            </MyAdressContainer>\n          </MyInfo>\n        </MyInfoContainer>\n      </MyAccountPage>\n      {save?<div>\n        <Modal isOpen={modal} toggle={toggle}>\n          <ModalHeader toggle={toggle}>Yeni Adress Ekle</ModalHeader>\n          <ModalBody>\n            <form onSubmit={newAddAdress}>\n              <Container>\n                <AddAdressNameLabel>Adres Başlığı:</AddAdressNameLabel>\n                <AddAdressNameInput ref={addressTile} />\n\n                <AddAdressLocationLabel>Açık Adres:</AddAdressLocationLabel>\n                <AddAdressLocationInput ref={addressLocation} />\n              </Container>\n\n              <Button\n                color=\"primary\"\n                style={{\n                  float: \"right\",\n                  marginLeft: \"30px\",\n                  marginTop: \"20px\",\n                }}\n              >\n              Kaydet\n              \n              </Button>\n              <Button\n                color=\"secondary\"\n                style={{ float: \"right\", marginTop: \"20px\" }}\n                onClick={toggle}\n              >\n                İptal Et\n              </Button>\n            </form>\n          </ModalBody>\n          <ModalFooter></ModalFooter>\n        </Modal>\n      </div>:<div>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Adresi Değiştir</ModalHeader>\n        <ModalBody>\n          <form onSubmit={editAddAdress}>\n            <Container>\n              <AddAdressNameLabel>Adres Başlığı:</AddAdressNameLabel>\n              <AddAdressNameInput placeholder={defaultTitle} ref={editaddressTile} />\n\n              <AddAdressLocationLabel>Açık Adres:</AddAdressLocationLabel>\n              <AddAdressLocationInput placeholder={defaultLocation} ref={editaddressLocation} />\n            </Container>\n\n            <Button\n              color=\"primary\"\n              style={{\n                float: \"right\",\n                marginLeft: \"30px\",\n                marginTop: \"20px\",\n              }}\n            >\n            Düzenle\n            \n            </Button>\n            <Button\n              color=\"secondary\"\n              style={{ float: \"right\", marginTop: \"20px\" }}\n              onClick={toggle}\n            >\n              İptal Et\n            </Button>\n          </form>\n        </ModalBody>\n        <ModalFooter></ModalFooter>\n      </Modal>\n    </div>}\n    </Wrapper>\n  );\n}\n\nexport default MyAcount;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HomaPageTitle = styled.div`\n@media only screen and (max-width:725px){\n  font-size: 30px;\n}\n  margin-top: 50px;\n  font-size: 45px;\n  color: brown;\n  cursor: pointer;\n  .link {\n    text-decoration: none;\n    color: brown;\n  }\n  .link:hover {\n    color: brown;\n    text-decoration: none;\n  }\n`;\n\nconst MyAccountPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n \n`;\n\nconst PageTitle = styled.div`\n\n  span {\n    font-size: 30px;\n    color: red;\n  }\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 10px;\n`;\nconst ProfilImg = styled.div`\n  margin-right: 20px;\n  border: 2px solid rgb(234, 234, 234);\n  padding: 10px;\n  font-size: 20px;\n  border-radius: 100px;\n  background-color: rgb(234, 234, 234);\n  @media only screen and (max-width:725px){\n    padding: 8px;\n  font-size: 15px;\n}\n`;\nconst ProfilName = styled.div`\n  @media only screen and (max-width:725px){\n   \n  font-size: 20px;\n}\n  font-size: 25px;\n`;\n\nconst MyInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NameSurname = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media only screen and (max-width:725px){\n    display: flex;\n  flex-direction: column;\n   \n}\n`;\n\nconst MyName = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 100px;\n`;\nconst MySurname = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst LabelSame = styled.label`\n  font-size: 20px;\n`;\n\nconst InputSame = styled.input`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  font-size: 20px;\n  border: 2px solid rgb(234, 234, 234);\n  border-radius: 6px;\n  outline-width: 0px;\n\n  :hover {\n    background-color: rgb(234, 234, 234);\n    border: 2px solid rgb(234, 234, 234);\n    border-radius: 6px;\n  }\n`;\n\nconst NameLabel = styled(LabelSame)``;\nconst NameInput = styled(InputSame)``;\nconst SurnameLabel = styled(LabelSame)``;\nconst SurnameInput = styled(InputSame)``;\nconst MyInfoDecsContainer = styled.div`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  \n`;\nconst MyInfoDecsTitle = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n`;\nconst MyInfoSubDecs = styled.span`\n  margin-top: 10px;\n  width: 560px;\n  @media only screen and (max-width:725px){\n    width:300px;\n   \n}\n \n`;\nconst MyInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 30px;\n  border: 2px solid lightgray;\n  padding: 30px;\n  border-radius: 10px;\n  width:630px;\n  @media only screen and (max-width:725px){\n    width:350px;\n   \n}\n\n \n  \n  \n`;\n\nconst MyPassaword = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nconst MyPassawordDesc = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MyPassawordDescTitle = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst MyPassawordDescSub = styled.span`\n  margin-top: 10px;\n  width: 560px;\n  margin-bottom: 20px;\n  @media only screen and (max-width:725px){\n    width: 300px;\n   \n}\n`;\n\nconst AvailablePassword = styled(InputSame)`\n  margin-bottom: 20px;\n  width: 380px;\n  @media only screen and (max-width:725px){\n    width: 300px;\n   \n}\n  \n`;\n\nconst ChangePassword = styled(InputSame)`\n  width: 380px;\n  @media only screen and (max-width:725px){\n    width: 300px;\n   \n}\n`;\nconst AvailablePasswordLabel = styled(LabelSame)``;\nconst ChangePasswordLabel = styled(LabelSame)``;\n\nconst MyAdressContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\nconst MyAdressHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst MyAdressTitle = styled.span`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: bold;\n`;\nconst MyAdressSub = styled.span`\n  width: 580px;\n   @media only screen and (max-width:725px){\n    width: 300px;\n   \n}\n`;\nconst MyAdresss = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst MyAdressSame = styled.div`\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-top: 20px;\n  width: 250px;\n`;\n\nconst MyAdressAdd = styled(MyAdressSame)`\n  margin-right: 20px;\n  padding-top: 70px;\n  padding-bottom: 70px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\nconst MyAdressInfo = styled(MyAdressSame)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  cursor: default;\n height:280px;\n\n  margin-right:20px;\n\n`;\n\nconst MyAdressName = styled.span`\n  margin-top: 10px;\n\n  font-size: 20px;\n  font-weight: bold;\n  color: brown;\n`;\n\nconst MyAdressLocation = styled.textarea`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nwidth:220px;\nheight:200px;\nborder:none;\noutline-width:0;\ncursor:pointer;\n \n`;\n\nconst Buttons = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst ButtonSame = styled.button`\n  border: none;\n  outline-width: 0px;\n  padding: 10px 30px;\n  border-radius: 20px;\n  color: white;\n`;\n\nconst DeleteAdress = styled(ButtonSame)`\n  margin-right: 30px;\n  background-color: red;\n`;\n\nconst EditAdress = styled(ButtonSame)`\n  background-color: green;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst AddAdressNameInput = styled(InputSame)`\n  font-size: 18px;\n  :hover {\n    background-color: white;\n  }\n`;\nconst AddAdressLocationInput = styled.textarea`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  font-size: 20px;\n  border: 2px solid rgb(234, 234, 234);\n  border-radius: 6px;\n  outline-width: 0px;\n\n  :hover {\n    border: 2px solid rgb(234, 234, 234);\n    border-radius: 6px;\n  }\n`;\n\nconst SameLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst AddAdressNameLabel = styled(SameLabel)`\n  margin-top: 15px;\n`;\nconst AddAdressLocationLabel = styled(SameLabel)`\n  margin-top: 30px;\n`;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/PastOrder.js",["144","145","146"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport db from \"../firebase\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport alert from \"alertifyjs\";\nfunction PastOrder() {\n\n  const [orderPastList, setOrderPastList] = useState([]);\n  const [pastOrderPrice, setPastOrderPrice] = useState(0);\n\n\n\n  useEffect(() => {\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n    console.log(uidLoc);\n    if (uidLoc !== null) {\n      db.collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"pastOrderList\")\n        .onSnapshot((onSnapshot) => {\n          const pastOrderListItems = [];\n          onSnapshot.forEach((doc) => {\n            pastOrderListItems.push(doc);\n          });\n          setOrderPastList(pastOrderListItems);\n        });\n    }\n  }, []);\n\n \n\n  useEffect(() => {\n    let countPrice = 0;\n\n    orderPastList.map((item) => {\n      countPrice +=\n        item.data().cartPastOrderListPrice *\n        item.data().cartPastOrderListQunatity;\n    });\n    setPastOrderPrice(countPrice);\n  });\n\n  const pastAddCartList = (item)=>{\n    const uidLoc = JSON.parse(localStorage.getItem(\"uidLoc\"));\n    const addCartItems = db\n        .collection(\"personList\")\n        .doc(uidLoc)\n        .collection(\"cartList\")\n        .doc(item.id);\n      addCartItems.get().then((doc) => {\n        if (doc.exists) {\n          addCartItems.update({\n            addCartProductQuantity: doc.data().addCartProductQuantity + 1,\n          });\n          alert.success(\"Siparişiniz Tekrar eklemiştir\");\n        } else {\n          db.collection(\"personList\")\n            .doc(uidLoc)\n            .collection(\"cartList\")\n            .doc(item.id)\n            .set({\n              addCartProductName: item.data().cartPastOrderListName,\n              addCartProductPrice: item.data().cartPastOrderListPrice,\n              addCartProductQuantity: 1,\n              addCartProductTime: item.data().cartPastOrderListTime,\n              addCartProductKind:item.data().cartPastOrderListKind\n            \n            })\n            .then(() => {\n              alert.success(\"Siparişiniz Başarıyla eklemiştir\");\n            })\n            .catch((error) => {\n              console.error(\"Error writing document: \", error);\n            });\n        }\n      });\n    \n\n  }\n\n  return (\n    <Wrapper>\n      <Container>\n        <PastOrderHeader>\n          <MainTitle>\n            <Link className=\"link\" to=\"/\">\n              bitermoscoffe\n            </Link>\n          </MainTitle>\n          <SubTitle>Geçmiş Siparişlerim</SubTitle>\n        </PastOrderHeader>\n        {orderPastList.length===0?\n          <div className=\"emptyPastOrderList\">\n          <span>Geçmiş Siparişiniz Bulunmamaktadır</span>\n          </div>\n          :<PastOrderProduct>\n          <PastOrderProductTop>\n            <PastOrderDate> 17 Mayıs 2021</PastOrderDate>\n            <PastOrderCount>Adet: {orderPastList.length}</PastOrderCount>\n            <PastOrderAmount>Fİyat : {pastOrderPrice}₺</PastOrderAmount>\n          </PastOrderProductTop>\n\n          {orderPastList.map((item, index) => (\n            <PastOrderProductBottom>\n              <PastOrderName>{item.data().cartPastOrderListName}</PastOrderName>\n\n              <PastOrderPrice>\n                Fiyat:{\" \"}\n                {item.data().cartPastOrderListPrice *\n                  item.data().cartPastOrderListQunatity}\n              </PastOrderPrice>\n\n              <PastOrderTime>\n                Süre {item.data().cartPastOrderListTime} dk\n              </PastOrderTime>\n\n              <TryAddCartList onClick={()=>pastAddCartList(item)}>\n              Sepete Ekle\n              </TryAddCartList>\n            </PastOrderProductBottom>\n          ))}\n        </PastOrderProduct>}\n      </Container>\n    </Wrapper>\n  );\n}\n\nexport default PastOrder;\n\nconst Wrapper = styled.div``;\nconst TryAddCartList = styled.button`\nborder:none;\npadding:5px 10px;\nborder-radius:10px;\nbackground-color:#29bb89;\ncolor:white;\n`\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n  .emptyPastOrderList{\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    margin-top:20px;\n    font-size:35px;\n    font-weight:bold;\n  }\n\n`;\nconst PastOrderHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst MainTitle = styled.span`\n  margin-bottom: 30px;\n  color: brown;\n  font-weight: bold;\n  font-size: 50px;\n  @media only screen and (max-width:725px){\n    font-size: 40px;\n\n  }\n\n  cursor: pointer;\n\n  .link {\n    text-decoration: none;\n    color: brown;\n    :hover {\n      color: brown;\n      text-decoration: none;\n    }\n  }\n`;\nconst SubTitle = styled.span`\n  color: red;\n  margin-bottom: 20px;\n  font-size: 35px;\n  @media only screen and (max-width:725px){\n    font-size: 25px;\n\n  }\n`;\n\nconst PastOrderDate = styled.span``;\nconst PastOrderAmount = styled.span``;\nconst PastOrderCount = styled.span``;\nconst PastOrderProduct = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media only screen and (max-width:725px)\n  {\n    width:300px;\n  margin-left:50px;\n  }\n \n  \n`;\nconst PastOrderProductTop = styled.div`\n  width: 900px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  border: 1px solid lightgray;\n  background-color: rgb(249, 249, 249);\n  @media only screen and (max-width:725px){\n    width: 300px;\n    font-size:15px;\n    font-weight:bold;\n\n  }\n`;\n\nconst PastOrderProductBottom = styled.div`\n  width: 900px;\n  border: 1px solid lightgray;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  @media only screen and (max-width:725px){\n    width: 300px;\n    font-size:15px;\n    \n\n  }\n`;\n\nconst SpanSame = styled.span`\n  font-size: 20px;\n  @media only screen and (max-width:725px){\n    \n    font-size:15px;\n    \n\n  }\n`;\nconst PastOrderName = styled(SpanSame)``;\nconst PastOrderPrice = styled(SpanSame)``;\nconst PastOrderTime = styled(SpanSame)``;\n","/Users/engingulek/Desktop/bitermoscoffeApp/bitermoscoffe/bitermoscoffe-app/src/component/Message.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":5,"column":40,"nodeType":"153","messageId":"154","endLine":5,"endColumn":44},{"ruleId":"151","severity":1,"message":"155","line":10,"column":8,"nodeType":"153","messageId":"154","endLine":10,"endColumn":10},{"ruleId":"151","severity":1,"message":"156","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":21},{"ruleId":"151","severity":1,"message":"157","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":30},{"ruleId":"151","severity":1,"message":"158","line":11,"column":32,"nodeType":"153","messageId":"154","endLine":11,"endColumn":55},{"ruleId":"159","severity":1,"message":"160","line":38,"column":6,"nodeType":"161","endLine":38,"endColumn":65,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":16},{"ruleId":"151","severity":1,"message":"164","line":13,"column":3,"nodeType":"153","messageId":"154","endLine":13,"endColumn":8},{"ruleId":"151","severity":1,"message":"165","line":15,"column":3,"nodeType":"153","messageId":"154","endLine":15,"endColumn":13},{"ruleId":"151","severity":1,"message":"166","line":22,"column":22,"nodeType":"153","messageId":"154","endLine":22,"endColumn":35},{"ruleId":"151","severity":1,"message":"167","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":18},{"ruleId":"151","severity":1,"message":"168","line":50,"column":9,"nodeType":"153","messageId":"154","endLine":50,"endColumn":21},{"ruleId":"151","severity":1,"message":"169","line":51,"column":19,"nodeType":"153","messageId":"154","endLine":51,"endColumn":29},{"ruleId":"151","severity":1,"message":"170","line":67,"column":9,"nodeType":"153","messageId":"154","endLine":67,"endColumn":15},{"ruleId":"151","severity":1,"message":"171","line":68,"column":9,"nodeType":"153","messageId":"154","endLine":68,"endColumn":21},{"ruleId":"159","severity":1,"message":"172","line":73,"column":6,"nodeType":"153","endLine":73,"endColumn":13},{"ruleId":"159","severity":1,"message":"173","line":73,"column":6,"nodeType":"153","endLine":73,"endColumn":13,"suggestions":"174"},{"ruleId":"151","severity":1,"message":"175","line":75,"column":10,"nodeType":"153","messageId":"154","endLine":75,"endColumn":15},{"ruleId":"151","severity":1,"message":"176","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"177","line":1,"column":36,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"178","line":4,"column":16,"nodeType":"153","messageId":"154","endLine":4,"endColumn":32},{"ruleId":"151","severity":1,"message":"179","line":9,"column":3,"nodeType":"153","messageId":"154","endLine":9,"endColumn":9},{"ruleId":"151","severity":1,"message":"165","line":10,"column":3,"nodeType":"153","messageId":"154","endLine":10,"endColumn":13},{"ruleId":"151","severity":1,"message":"180","line":15,"column":9,"nodeType":"153","messageId":"154","endLine":15,"endColumn":13},{"ruleId":"151","severity":1,"message":"180","line":14,"column":9,"nodeType":"153","messageId":"154","endLine":14,"endColumn":13},{"ruleId":"151","severity":1,"message":"181","line":36,"column":15,"nodeType":"153","messageId":"154","endLine":36,"endColumn":28},{"ruleId":"151","severity":1,"message":"182","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":27},{"ruleId":"151","severity":1,"message":"183","line":15,"column":9,"nodeType":"153","messageId":"154","endLine":15,"endColumn":17},{"ruleId":"151","severity":1,"message":"184","line":21,"column":9,"nodeType":"153","messageId":"154","endLine":21,"endColumn":22},{"ruleId":"159","severity":1,"message":"185","line":41,"column":6,"nodeType":"161","endLine":41,"endColumn":13,"suggestions":"186"},{"ruleId":"159","severity":1,"message":"187","line":94,"column":6,"nodeType":"161","endLine":94,"endColumn":35,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":100,"column":32,"nodeType":"191","messageId":"192","endLine":100,"endColumn":34},{"ruleId":"151","severity":1,"message":"193","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"194","line":16,"column":8,"nodeType":"153","messageId":"154","endLine":16,"endColumn":22},{"ruleId":"151","severity":1,"message":"195","line":23,"column":21,"nodeType":"153","messageId":"154","endLine":23,"endColumn":33},{"ruleId":"151","severity":1,"message":"196","line":24,"column":18,"nodeType":"153","messageId":"154","endLine":24,"endColumn":27},{"ruleId":"151","severity":1,"message":"183","line":47,"column":9,"nodeType":"153","messageId":"154","endLine":47,"endColumn":17},{"ruleId":"151","severity":1,"message":"197","line":73,"column":15,"nodeType":"153","messageId":"154","endLine":73,"endColumn":35},{"ruleId":"159","severity":1,"message":"185","line":82,"column":6,"nodeType":"161","endLine":82,"endColumn":8,"suggestions":"198"},{"ruleId":"159","severity":1,"message":"185","line":96,"column":6,"nodeType":"161","endLine":96,"endColumn":8,"suggestions":"199"},{"ruleId":"159","severity":1,"message":"200","line":126,"column":5,"nodeType":"161","endLine":126,"endColumn":16,"suggestions":"201"},{"ruleId":"159","severity":1,"message":"202","line":130,"column":3,"nodeType":"153","endLine":130,"endColumn":12,"suggestions":"203"},{"ruleId":"189","severity":1,"message":"190","line":134,"column":28,"nodeType":"191","messageId":"192","endLine":134,"endColumn":30},{"ruleId":"151","severity":1,"message":"204","line":151,"column":9,"nodeType":"153","messageId":"154","endLine":151,"endColumn":15},{"ruleId":"151","severity":1,"message":"205","line":1,"column":23,"nodeType":"153","messageId":"154","endLine":1,"endColumn":41},{"ruleId":"151","severity":1,"message":"206","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"151","severity":1,"message":"207","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":18},{"ruleId":"151","severity":1,"message":"205","line":1,"column":23,"nodeType":"153","messageId":"154","endLine":1,"endColumn":41},{"ruleId":"159","severity":1,"message":"185","line":91,"column":4,"nodeType":"161","endLine":91,"endColumn":6,"suggestions":"208"},{"ruleId":"151","severity":1,"message":"209","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":21},{"ruleId":"159","severity":1,"message":"210","line":33,"column":3,"nodeType":"153","endLine":33,"endColumn":12,"suggestions":"211"},{"ruleId":"189","severity":1,"message":"190","line":36,"column":30,"nodeType":"191","messageId":"192","endLine":36,"endColumn":32},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'useDispatch' is defined but never used.","'cartConfirmListStatu' is assigned a value but never used.","'setCartConfirmListStatu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'menuSelector.menuInfo'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'HomeIcon' is defined but never used.","'login' is defined but never used.","'selectUser' is defined but never used.","'setInputValue' is assigned a value but never used.","'userSing' is assigned a value but never used.","'menuSelector' is assigned a value but never used.","'setUserLoc' is assigned a value but never used.","'uidLoc' is assigned a value but never used.","'userEmailLoc' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'localStarnge'. Either include it or remove the dependency array.",["215"],"'login' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'providerFacebook' is defined but never used.","'logout' is defined but never used.","'user' is assigned a value but never used.","'emailUserInfo' is assigned a value but never used.","'cartConfirmHiddle' is defined but never used.","'dispatch' is assigned a value but never used.","'loginSelector' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uidLoc'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'cartListConfirm'. Either include it or remove the dependency array.",["217"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'addMonths' is defined but never used.","'FormHelperText' is defined but never used.","'setStartDate' is assigned a value but never used.","'setHourss' is assigned a value but never used.","'cartConfirmItemPrice' is assigned a value but never used.",["218"],["219"],"React Hook useEffect has missing dependencies: 'adress' and 'uidLoc'. Either include them or remove the dependency array.",["220"],"React Hook useEffect contains a call to 'setCaetConfirmPrice'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cartConfirm] as a second argument to the useEffect Hook.",["221"],"'toggle' is assigned a value but never used.","'isAsyncThunkAction' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.",["222"],"'useSelector' is defined but never used.","React Hook useEffect contains a call to 'setPastOrderPrice'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [orderPastList] as a second argument to the useEffect Hook.",["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"232","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"232","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [menuSelector.menuInfo, menuSelector.menuInfo.menuTitleId, menuSelector.searchInfo]",{"range":"242","text":"243"},"Update the dependencies array to be: [localStarnge]",{"range":"244","text":"245"},"Update the dependencies array to be: [locId, uidLoc]",{"range":"246","text":"247"},"Update the dependencies array to be: [cartListConfirm, cartSelector.cartConfirmHid]",{"range":"248","text":"249"},"Update the dependencies array to be: [uidLoc]",{"range":"250","text":"251"},{"range":"252","text":"251"},"Update the dependencies array to be: [adress, myAddress, uidLoc]",{"range":"253","text":"254"},"Add dependencies array: [cartConfirm]",{"range":"255","text":"256"},{"range":"257","text":"251"},"Add dependencies array: [orderPastList]",{"range":"258","text":"259"},[1167,1226],"[menuSelector.menuInfo, menuSelector.menuInfo.menuTitleId, menuSelector.searchInfo]",[2356,2363],"[localStarnge]",[1491,1498],"[locId, uidLoc]",[3043,3072],"[cartListConfirm, cartSelector.cartConfirmHid]",[2686,2688],"[uidLoc]",[3020,3022],[3730,3741],"[adress, myAddress, uidLoc]",[4193,4193],", [cartConfirm]",[2941,2943],[1101,1101],", [orderPastList]"]